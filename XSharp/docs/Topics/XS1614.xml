<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1614</title>
  <keywords>
    <keyword translate="true">XS1614</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1614</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">&apos;name&apos; is ambiguous; between &apos;attribute1&apos; and &apos;attribute2&apos;. use either &apos;@attribute&apos; or &apos;attributeAttribute&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The compiler has encountered an ambiguous attribute specification.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">For convenience, the X# compiler allows you to specify ExampleAttribute as just </text><text styleclass="Code Example" translate="true">[Example]</text><text styleclass="Normal" translate="true">. However, ambiguity arises if an attribute class named Example exists along with ExampleAttribute, because the compiler cannot tell if </text><text styleclass="Code Example" translate="true">[Example]</text><text styleclass="Normal" translate="true"> refers to the Example attribute or the ExampleAttribute attribute. To clarify, use </text><text styleclass="Code Example" translate="true">[@Example]</text><text styleclass="Normal" translate="true"> for the Example attribute and </text><text styleclass="Code Example" translate="true">[ExampleAttribute]</text><text styleclass="Normal" translate="true"> for ExampleAttribute.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates XS1614:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// XS1614.prg  </text><br/><text styleclass="Code with box" translate="true">using System;  </text><br/><br/><text styleclass="Code with box" translate="true">// Both of the following classes are valid attributes with valid  </text><br/><text styleclass="Code with box" translate="true">// names (MySpecial and MySpecialAttribute). However, because the lookup  </text><br/><text styleclass="Code with box" translate="true">// rules for attributes involves auto-appending the &apos;Attribute&apos; suffix  </text><br/><text styleclass="Code with box" translate="true">// to the identifier, these two attributes become ambiguous; that is,  </text><br/><text styleclass="Code with box" translate="true">// if you specify MySpecial, the compiler can&apos;t tell if you want  </text><br/><text styleclass="Code with box" translate="true">// MySpecial or MySpecialAttribute.  </text><br/><br/><text styleclass="Code with box" translate="true">public class MySpecial : Attribute {  </text><br/><text styleclass="Code with box" translate="true">   public MySpecial() {}  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">public class MySpecialAttribute : Attribute {  </text><br/><text styleclass="Code with box" translate="true">   public MySpecialAttribute() {}  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">class MakeAWarning {  </text><br/><text styleclass="Code with box" translate="true">   [MySpecial()] // XS1614  </text><br/><text styleclass="Code with box" translate="true">                 // Ambiguous: MySpecial or MySpecialAttribute?  </text><br/><text styleclass="Code with box" translate="true">   public static void Main() {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><br/><text styleclass="Code with box" translate="true">   [@MySpecial()] // This isn&apos;t ambiguous, it binds to the first attribute above.  </text><br/><br/><text styleclass="Code with box" translate="true">   public static void NoWarning() {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><br/><text styleclass="Code with box" translate="true">   [MySpecialAttribute()] // This isn&apos;t ambiguous, it binds to the second attribute above.  </text><br/><text styleclass="Code with box" translate="true">   public static void NoWarning2() {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><br/><text styleclass="Code with box" translate="true">   [@MySpecialAttribute()] // This is also legal.  </text><br/><text styleclass="Code with box" translate="true">   public static void NoWarning3() {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
