<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0034</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0034</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Operator &apos;operator&apos; is ambiguous on operands of type &apos;type1&apos; and &apos;type2&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">An operator was used on two objects and the compiler found more than one conversion. Because conversions have to be unique, you either have to make a cast or to make one of the conversions explicit. For more information, see Conversion Operators.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates CS0034:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS0034.cs &#160;</text><br/><text styleclass="Code with box" translate="true">public class A &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // allows for the conversion of A object to int &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator int (A s) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return 0; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator string (A i) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return null; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class B &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator int (B s) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // one way to resolve this CS0034 is to make one conversion explicit &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // public static explicit operator int (B s) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return 0; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator string (B i) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return null; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator B (string i) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return null; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static implicit operator B (int i) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;return null; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class C &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main () &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;A a = new A(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;B b = new B(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;b = b + a; &#160; // CS0034 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// another way to resolve this CS0034 is to make a cast &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// b = b + (int)a; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In C# 1.1 a compiler bug made it possible to define a class that has implicit user-defined conversions to both int and bool, and to use a bitwise AND operator (&amp;) on objects of that type. In C# 2.0, this bug was fixed to bring the compiler into compliance with the C# specification, and therefore the following code will now cause CS0034:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">namespace CS0034 &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;class TestClass2 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;public void Test() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;TestClass o1 = new TestClass(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;TestClass o2 = new TestClass(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;TestClass o3 = o1 &amp; o2; //CS0034 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160;class TestClass &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;public static implicit operator int(TestClass o) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;return 1; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;public static implicit operator TestClass(int v) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;return new TestClass(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;public static implicit operator bool(TestClass o) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;return true; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
