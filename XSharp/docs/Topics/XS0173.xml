<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0173</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0173</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Type of conditional expression cannot be determined because there is no implicit conversion between &apos;class1&apos; and &apos;class2&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Conversions between classes are useful when you want objects of different classes to work with the same code. However, two classes that work together cannot have mutual and redundant conversions, or no implicit conversions. The types of </text><text styleclass="Code Example" translate="true">class1</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Code Example" translate="true">class2</text><text styleclass="Normal" translate="true"> are determined independently, and the more general type is selected as the type of the conditional expression. For more information about how types are determined, see Conditional operator cannot cast implicitly.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">To resolve CS0173, verify that there is one and only one implicit conversion between </text><text styleclass="Code Example" translate="true">class1</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Code Example" translate="true">class2</text><text styleclass="Normal" translate="true">, regardless of which direction the conversion is in and regardless of which class the conversion is in. For more information, see Implicit Numeric Conversions Table and Conversion Operators.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates CS0173:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">C#</text><br/><br/><text styleclass="Code with box" translate="true">// CS0173.cs &#160;</text><br/><text styleclass="Code with box" translate="true">public class C {} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class A &#160; </text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;//// The following code defines an implicit conversion operator from &#160; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;//// type C to type A. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;//public static implicit operator A(C c) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;//{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// &#160; &#160;A a = new A(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// &#160; &#160;a = c; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// &#160; &#160;return a; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;//} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class MyClass &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;public static void F(bool b) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;A a = new A(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;C c = new C(); &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// The following line causes CS0173 because there is no implicit &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// conversion from a to c or from c to a. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;object o = b ? a : c; &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// To resolve the error, you can cast a and c. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;//object o = b ? (object)a : (object)c; &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// Alternatively, you can add a conversion operator from class C to &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// class A, or from class A to class C, but not both. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;F(true); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} </text><text styleclass="Normal" translate="true">&#32;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following code does not produce CS0173 in Visual Studio 2005, but does in later versions.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">C#</text><br/><br/><text styleclass="Code with box" translate="true">//cs0173_2.cs &#160;</text><br/><text styleclass="Code with box" translate="true">class M &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;static int Main () &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;int X = 1; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// The following line causes CS0173 in Visual Studio 2005. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;object o = (X == 0) ? null : null; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;return -1; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
