//PP #xtranslate :Messages    =>  :cargo\[2\]
//PP #xtranslate :GetType     =>  :cargo\[3\]
//PP #xtranslate :GetPostEval =>  :cargo\[4\]
//PP #define CARGO_ELEMENTS 4


/***
*  @..SAY
*/

//PP #command @ <row>, <col> zSAY <xpr>                                       ;
//PP                         [PICTURE <pic>]                                 ;
//PP                         [COLOR <color>]                                 ;
//PP                                                                         ;
//PP       => DevPos( <row>, <col> )                                         ;
//PP        ; DevOutPict(<xpr>, <pic> [, <color>] )


//PP #command @ <row>, <col> zSAY <xpr>                                       ;
//PP                         [COLOR <color>]                                 ;
//PP                                                                         ;
//PP       => DevPos( <row>, <col> )                                         ;
//PP        ; DevOut( <xpr> [, <color>] )


/***
*  @..GET
*/

//PP #command @ <row>, <col> zGET <var>                                      ;
//PP                         [PICTURE <pic>]                                 ;
//PP                         [VALID <valid>]                                 ;
//PP                         [WHEN <when>]                                   ;
//PP                         [SEND <msg>]                                    ;
//PP                                                                         ;
//PP       => SetPos( <row>, <col> )                                         ;
//PP        ; AAdd(                                                          ;
//PP            GetList,                                                     ;
//PP            _GET_( <VAR>, <"var">, <pic>, <{valid}>, <{when}> ):display();
//PP              )                                                          ;
//PP        ;ATail(Getlist):reader := {|x| zGEReader(x) } ;
//PP        ;ATail(Getlist):cargo := ARRAY(CARGO_ELEMENTS) ;
//PP       [; ATail(GetList):<msg>]




/***
*   @..SAY..GET
*/

//PP #command @ <row>, <col> zSAY <sayxpr>                                    ;
//PP                         [<sayClauses,...>]                              ;
//PP                         zGET <VAR>                                       ;
//PP                         [<getClauses,...>]                              ;
//PP                                                                         ;
//PP       => @ <row>, <col> SAY <sayxpr> [<sayClauses>]                     ;
//PP        ; @ Row(), Col()+1 zGET <VAR> [<getClauses>]

/***
*   fancy GETs...
*/


// @..GET COLOR
//PP #command @ <row>, <col> zGET <var>                                       ;
//PP                         [<clauses,...>]                                 ;
//PP                         COLOR <color>                                   ;
//PP                         [<moreClauses,...>]                             ;
//PP                                                                         ;
//PP       => @ <row>, <col> zGET <VAR>                                       ;
//PP                         [<clauses>]                                     ;
//PP                         SEND colorDisp(<color>)                         ;
//PP                         [<moreClauses>]



// MESSAGE DISPLAY
//PP #command @ <row>, <col> zGET <var> ;
//PP                   		[<clauses,...>]  ;
//PP                   		MESSAGE <msg> ;
//PP                   		[<moreClauses,...>]  ;
//PP      =>  @ <row>, <col> zGET <VAR> ;
//PP 	                  	[<clauses>] ;
//PP                                 [<moreClauses>] ;
//PP                                 ;ATail(getlist):Messages := <msg>


// DATABASE COMBO BOX
//PP #xcommand @ <row>, <col> zGET <VAR> COMBO                         ;
//PP                         BROWSE < aBrowse_ >                       ;
//PP                         [COLOR <color> ]                          ;
//PP                         [ALIAS <cAlias>]                          ;
//PP                         [RETURN_FIELD < xRetFld>]                 ;
//PP                         [DISPLAY_TAG <cTag>]                      ; 
//PP                         [VALID <valid>]                           ;
//PP                         [WHEN <when>]                             ;
//PP                         [<lDropOnEnter: ALWAYS>]                  ;
//PP                         [XTOP <xTop> ]                            ;
//PP                         [XBOTTOM <xBottom> ]                      ;
//PP                         [FOR <FOR> ]                              ;
//PP                         [WHILE <WHILE> ]                          ;
//PP                         [BASE_FILTER <cBaseFilter> ]              ;
//PP                         [DISPLAY_FIELD <xDispFld> ]               ;
//PP                         [RETURN_TAG <cKeyTag>  ]                  ;
//PP                         [STRICT <lStrict> ]                       ;
//PP                         [EMPTY_ALLOWED <lEmptyAllowed> ]          ;
//PP                         [HOT_KEYS <aHotKeys_> ]                   ;
//PP                         [PICTURE <cPicture>]                      ;
//PP                         [WIDTH <nWidth>]                          ;
//PP                         [HEIGHT <nHeight> ]                       ;
//PP                         [POST_EVAL <bPostEval>]                   ;
//PP       =>                                                          ;
//PP          SetPos(<row>, <col>)                                     ;
//PP          ; AAdd(GetList,                                          ;
//PP               zGEDBComboNew( <(VAR)>, <VAR>,;
//PP                             {|x| iif(x == NIL, <VAR>, <VAR> := x) };
//PP                             , <{when}>, <{valid}>,  <.lDropOnEnter.>,;
//PP                             <cAlias>, <cTag>, <xTop>, <xBottom>, ;
//PP                             <{FOR}>, <{WHILE}>, <cBaseFilter>, ;
//PP                             <xRetFld>, < aBrowse_>,<xDispFld>,;
//PP                             <cKeyTag>, <lStrict>,;
//PP                             <aHotKeys_>, <cPicture>, <nWidth>,;
//PP                             <nHeight>, <color>,[<{bPostEval}>], <lEmptyAllowed> ) )


// GET & SAY
//PP #command @ <row>, <col> zSAY <sayxpr>                                    ;
//PP                         [<sayClauses,...>]                              ;
//PP                         zGET <VAR>                                       ;
//PP                         [<getClauses,...>]                              ;
//PP                                                                         ;
//PP       => @ <row>, <col> zSAY <sayxpr> [<sayClauses>]                     ;
//PP        ; @ Row(), Col()+1 zGET <VAR> [<getClauses>]


// CHECK BOX
//PP #command @ <row>, <col> zGET <var> CHECKBOX <cStr>                   ;
//PP                         [<lRight: RIGHT>]                            ;
//PP                         [ON <xOn>]                                   ;
//PP                         [OFF <xOff>]                                 ;
//PP                         [BOX <cBox>]                                 ;
//PP                         [CHECK <cCheck>]                             ;
//PP                         [WHEN  <bWhen> ]                             ;
//PP                         [VALID <bValid>]                             ;
//PP                         [POST_EVAL <bPostEval>]                      ;
//PP                                                                      ;
//PP       =>                                                             ;
//PP          SetPos(<row>, <col>)                                        ;
//PP          ; AAdd(GetList,                                             ;
//PP                 zGECheckNew({|x| iif(x == NIL, <VAR>, <VAR> := x) }, ;
//PP                      <(VAR)>, <cStr>,<.lRight.>,<cBox>,<xOn>,        ;
//PP                      <xOff>,<cCheck>, <{bWhen}>, <{bValid}>,         ;
//PP                      [<{bPostEval}>]) )


// Filler group codes
//PP #command @<Row>,<Col> zGet <cVar> COMBO_FILGRP [STRICT <lStrict>]       ;
//PP                                                [EMPTY_ALLOWED <lEmpty>] ;
//PP                                                [COLOR <cColor>]         ;
//PP                                                [FOR <bFor>]             ;
//PP                                                [WHEN <bWhen>]           ;
//PP                                                [VALID <bValid>] =>      ;
//PP           @<Row>,<Col> zGet <cVar>                                      ;
//PP           COMBO BROWSE  {{"GrpCode" ,"Group"      } ,                   ;
//PP                          {"Descript","Description"}}                    ;
//PP           ALIAS          "FilGrp"                                       ;
//PP           DISPLAY_FIELD  "GrpCode"                                      ;
//PP           DISPLAY_TAG    "FilGrpGC"                                     ;
//PP           RETURN_FIELD   "GrpCode"                                      ;
//PP           RETURN_TAG     "FilGrpGC"                                     ;
//PP           PICTURE        "@!"                                           ;
//PP           WIDTH          39                                             ;
//PP           HEIGHT         9                                              ;
//PP           [STRICT        <lStrict>]                                     ;
//PP           [EMPTY_ALLOWED <lEmpty>]                                      ;
//PP           [COLOR         <cColor>]                                      ;
//PP           [FOR           <bFor>]                                        ;
//PP           [WHEN          <bWhen>]                                       ;
//PP           [VALID         <bValid>]                                      ;
//PP           MESSAGE        "Select the filler group code"
          
// SSUsers
//PP #Command @<Row>,<Col> zGet <cVar> COMBO_USER [STRICT <lStrict>]           ;
//PP                                              [COLOR <Color>]              ;
//PP                                              [FOR   <bFor>]               ;
//PP                                              [VALID <bValid>]             ;
//PP                                              [EMPTY_ALLOWED <lEmpty>]     ;
//PP                                              [WHEN <bWhen>] =>            ;
//PP          @<Row>,<Col> zGet <cVar>                                         ;
//PP          COMBO BROWSE   {{"UserId","User ID"},{"Name","User"}}            ;
//PP          ALIAS          "SSUsers"                                         ;
//PP          RETURN_FIELD   "UserId"                                          ;
//PP          RETURN_TAG     "SSUserSU"                                        ;
//PP          DISPLAY_FIELD  "UserId"                                          ;
//PP          DISPLAY_TAG    "SSUserSU"                                        ;
//PP          XTOP           zGetSysId()                                       ;
//PP          XBOTTOM        zGetSysId()                                       ;
//PP          BASE_FILTER    zGetSysId()                                       ;
//PP          WHILE          {|| SSUsers->SysId == zGetSysId()}                ;
//PP          WIDTH          36                                                ;
//PP          HEIGHT         10                                                ;
//PP          PICTURE        "!!!!!!!!!!"                                      ;
//PP          [EMPTY_ALLOWED <lEmpty>]                                         ;
//PP          [STRICT        <lStrict>]                                        ;
//PP          [COLOR         <Color>  ]                                        ;
//PP          [FOR           <bFor>   ]                                        ;
//PP          [VALID         <bValid>]                                         ;
//PP          [WHEN          <bWhen>]                                          ;
//PP          MESSAGE        "Enter the user id"



