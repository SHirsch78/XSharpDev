<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0019</title>
  <keywords>
    <keyword translate="true">XS0019</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0019</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Operator &apos;operator&apos; cannot be applied to operands of type &apos;type&apos; and &apos;type&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">A binary operator is applied to data types that do not support it. For example, you cannot use the || operator on strings, you cannot use + , - , &lt; , or &gt; operators on bool variables, and you cannot use the == operator with a struct type unless the type explicitly overloads that operator.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If you encounter this error with a class type, it is because the class does not overload the operator. For more information, see Overloadable Operators.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In the following example, XS0019 is generated in two places because bool in X# is not convertible to int. XS0019 also is generated when the subtraction operator is applied to a string. The addition operator (+) can be used with string operands because that operator is overloaded by the String class to perform string concatenation.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true"> &#160;</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In the following example, conditional logic must be specified outside the ConditionalAttribute. You can pass only one predefined symbol to the ConditionalAttribute.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates XS0019.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true"> &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
