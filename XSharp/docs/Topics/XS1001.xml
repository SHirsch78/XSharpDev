<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1001</title>
  <keywords>
    <keyword translate="true">XS1001</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1001</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Identifier expected</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">You did not supply an identifier. An identifier is the name of a class, struct, namespace, method, variable and so on that you provide.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following example declares a simple class but does not give the class a name:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">//XS1001.prg  </text><br/><text styleclass="Code with box" translate="true">public class              //XS1001  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        public int Num {get; set;}  </text><br/><text styleclass="Code with box" translate="true">        void MethodA(){}  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><br/><text styleclass="Code with box" translate="true">The following sample generates XS1001 because, when declaring an enum, you must specify members:</text><br/><br/><br/><text styleclass="Code with box" translate="true">// XS1001.prg  </text><br/><text styleclass="Code with box" translate="true">public class clx  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">   enum Colors : int  </text><br/><text styleclass="Code with box" translate="true">   {  </text><br/><text styleclass="Code with box" translate="true">      &apos;a&apos;, &apos;b&apos; // XS1001, &apos;a&apos; is not a valid int identifier  </text><br/><text styleclass="Code with box" translate="true">       // The following line shows examples of valid identifiers:  </text><br/><text styleclass="Code with box" translate="true">       // Blue, Red, Orange  </text><br/><text styleclass="Code with box" translate="true">   };  </text><br/><br/><text styleclass="Code with box" translate="true">   public static void Main()  </text><br/><text styleclass="Code with box" translate="true">   {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">  </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Parameter names are required even if the compiler doesn&apos;t use them, for example, in an interface definition. These parameters are required so that programmers who are consuming the interface know something about the what the parameters mean.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// XS1001-2.prg  </text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library  </text><br/><text styleclass="Code with box" translate="true">interface IMyTest  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">   void TestFunc1(int, int);  // XS1001  </text><br/><text styleclass="Code with box" translate="true">   // Use the following line instead:  </text><br/><text styleclass="Code with box" translate="true">   // void TestFunc1(int a, int b);  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">class CMyTest : IMyTest  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">   void IMyTest.TestFunc1(int a, int b)  </text><br/><text styleclass="Code with box" translate="true">   {  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
