<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Pseudo Functions</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Pseudo Functions</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following pseudo functions are supported by the X# compiler</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><table styleclass="Default" rowcount="8" colcount="2">
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">Function</text></para>
        </td>
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">Description</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">PCOUNT</text><text styleclass="Normal" translate="true">()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">This pseudo function is only available in the </text><text styleclass="Body Text" style="font-weight:bold;" translate="true">VO/Vulcan</text><text styleclass="Body Text" translate="true"> dialect and only in methods or functions with a CLIPPER calling convention. </text><br/><text styleclass="Body Text" translate="true">It returns the number of argument passed to the function. The function does not expect and does not allow any arguments.</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">_GETMPARAM</text><text styleclass="Normal" translate="true">() and </text><text styleclass="Normal" style="font-weight:bold;" translate="true">_GETFPARAM</text><text styleclass="Normal" translate="true">()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">These pseudo functions are only available in the </text><text styleclass="Body Text" style="font-weight:bold;" translate="true">VO/Vulcan</text><text styleclass="Body Text" translate="true"> dialect and only in methods or functions with a CLIPPER calling convention. </text><br/><text styleclass="Body Text" translate="true">You can use them to retrieve a function parameter by position. You must pass a numeric expression to these functions. If you pass a number that is larger than the actual number of parameters at runtime then you will get an array access exception.</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">String2Psz</text><text styleclass="Normal" translate="true">() and </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Cast2Psz</text><text styleclass="Normal" translate="true">()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">These pseudo functions are used </text><text styleclass="Body Text" translate="true"> in the </text><text styleclass="Body Text" translate="true">VO/Vulcan</text><text styleclass="Body Text" translate="true"> dialect </text><text styleclass="Body Text" translate="true">to convert DotNet strings to unmanaged Ansi PSZ strings. Not only is a PSZ created, but the functions also change the code generation and set up code to clear the allocated PSZ variable on exit of the function in which they are created.</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">ALTD</text><text styleclass="Normal" translate="true">()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">This function will insert a call to System.Diagnostics.Debugger.Break inside a check to see if the debugger is attached (System.Diagnostics.Debugger.IsAttached)</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">_GetInst</text><text styleclass="Normal" translate="true">()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">This function will return the module handle for the current module. Behind the scenes this is translated to System.Runtime.InteropServices.Marshal.GetHINSTANCE(TypeOf(FunctionsClass):Module)</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">PCALL()</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Normal" style="font-weight:bold;" translate="true">CCALL()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">The methods are used to call an API function for a strongly typed PTR.</text><br/><text styleclass="Body Text" translate="true">The function expects a first parameter of type PTR and the other parameters must match the parameters defined in the function to which the typed PTR points</text><br/><text styleclass="Body Text" translate="true">This is </text><text styleclass="Body Text" style="font-weight:bold;" translate="true">not yet supported</text><text styleclass="Body Text" translate="true"> in the current compiler version </text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td>
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">PCallNative&lt;Type&gt;()</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Normal" style="font-weight:bold;" translate="true">CCallNative&lt;Type&gt;()</text></para>
        </td>
        <td>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">The methods are used to call an API function for an untyped PTR</text></para>
          <para styleclass="Body Text"><text styleclass="Body Text" translate="true">The function expects a generic type parameter which indicates the return type and a first parameter of type PTR. Other parameters are allowed and must not point to managed memory.</text><br/><text styleclass="Body Text" translate="true">This is </text><text styleclass="Body Text" style="font-weight:bold;" translate="true">not yet supported</text><text styleclass="Body Text" translate="true"> in the current compiler version </text></para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Normal"><tab /></para>
    <para styleclass="Normal"><tab /></para>
  </body>
</topic>
