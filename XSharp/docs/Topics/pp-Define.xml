<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" status="Complete" lasteditedby="robert" version="2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title>#define</title>
  <keywords>
    <keyword>#define</keyword>
    <keyword>Preprocessor</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1">#define</para>
    </header>
    <para styleclass="Body Text"></para>
    <para styleclass="Code Example"><text style="font-weight:normal; font-style:normal; color:#000000;">#define identifier [token-string]</text></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">or</para>
    <para styleclass="Body Text">#define identifier LPAREN parameters RPAREN</para>
    <para styleclass="Body Text"></para>
    <para styleclass="Body Text">#define lets you define a symbol, such that, by using the symbol as the expression in a <link displaytype="text" defaultstyle="true" type="topiclink" href="pp-Ifdef">#ifdef</link> directive, the expression will evaluate to true or in a or <link displaytype="text" defaultstyle="true" type="topiclink" href="pp-Ifndef">#ifndef</link> directive the expression will evaluate to false.</para>
    <para styleclass="Body Text">#define also allows you define a symbolic name for a token string, so you can use the symbolic name in your code and the preprocessor will replace all occurences of that name with the token string that you have specified.</para>
    <para styleclass="Body Text">For example:</para>
    <para styleclass="Code Example">#define DEBUG</para>
    <para styleclass="Code Example">// ...</para>
    <para styleclass="Code Example">#if DEBUG</para>
    <para styleclass="Code Example"> &#160; &#160;Console.WriteLine(&quot;Debug version&quot;);</para>
    <para styleclass="Code Example">#endif</para>
    <para styleclass="Normal"></para>
    <para styleclass="Body Text">or </para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">#define VERSION &quot;1.2.0.0&quot;</para>
    <para styleclass="Code Example">#define FILEVERSION &quot;1.2.3.4&quot;</para>
    <para styleclass="Code Example">// ...</para>
    <para styleclass="Code Example">[assembly: AssemblyVersion(VERSION)]</para>
    <para styleclass="Code Example">[assembly: AssemblyFileVersion(FILEVERSION)]</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Heading3"><text style="font-weight:normal;">A define with parentheses, such as </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">#define MAX(a,b) iif(a&gt;b, a, b)</para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal">will be treated like a #translate. </para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading3">Notes</para>
    <para styleclass="Normal">Please note that <text style="font-weight:bold;">defines are</text>&#32;<text style="font-weight:bold;">CASE SENSITIVE</text>, so the following code will work:</para>
    <para styleclass="Normal"></para>
    <para styleclass="Code Example">#define TEST 123</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example">FUNCTION Test() AS INT</para>
    <para styleclass="Code Example"><tab />RETURN TEST</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Body Text">but this will NOT compile:</para>
    <para styleclass="Code Example">#define TEST 123</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example">FUNCTION TEST() AS INT</para>
    <para styleclass="Code Example"><tab />RETURN TEST</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Body Text">because the preprocessor will replace the name <text styleclass="Code Example">TEST</text> in the FUNCTION line with the value 123 which is not a valid identifier. After preprocessing the code becomes:</para>
    <para styleclass="Code Example">FUNCTION 123() AS INT</para>
    <para styleclass="Code Example"><tab />RETURN 123</para>
    <para styleclass="Code Example"></para>
    <para styleclass="Body Text"></para>
    <para styleclass="Code Example"></para>
  </body>
</topic>
