<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0413</title>
  <keywords>
    <keyword translate="true">XS0413</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0413</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The type parameter &apos;type parameter&apos; cannot be used with the &apos;as&apos; operator because it does not have a class type constraint nor a &apos;class&apos; constraint</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This error occurs if a generic type uses the as operator, but that generic type does not have a class type constraint. The as operator is only allowed with reference types, so the type parameter must be constrained to guarantee that it is not a value type. To avoid this error, use a class type constraint or a reference type constraint.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This is because the as operator could return null, which is not a possible value for a value type, and the type parameter must be treated as a value type unless it is a class type constraint or a reference type constraint.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates XS0413.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// XS0413.prg  </text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library  </text><br/><text styleclass="Code with box" translate="true">class A {}  </text><br/><text styleclass="Code with box" translate="true">class B : A {}  </text><br/><br/><text styleclass="Code with box" translate="true">class CMain  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">   A a = null;  </text><br/><text styleclass="Code with box" translate="true">   public void G&lt;T&gt;()  </text><br/><text styleclass="Code with box" translate="true">   {  </text><br/><text styleclass="Code with box" translate="true">      a = new A();  </text><br/><text styleclass="Code with box" translate="true">      System.Console.WriteLine (a as T);  // XS0413  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><br/><text styleclass="Code with box" translate="true">   // OK  </text><br/><text styleclass="Code with box" translate="true">   public void H&lt;T&gt;() where T : A  </text><br/><text styleclass="Code with box" translate="true">   {  </text><br/><text styleclass="Code with box" translate="true">      a = new A();  </text><br/><text styleclass="Code with box" translate="true">      System.Console.WriteLine (a as T);  </text><br/><text styleclass="Code with box" translate="true">   }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
