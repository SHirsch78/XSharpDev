<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1001</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1001</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Identifier expected</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">You did not supply an identifier. An identifier is the name of a class, struct, namespace, method, variable and so on that you provide.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following example declares a simple class but does not give the class a name:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">//cs1001.cs &#160;</text><br/><text styleclass="Code with box" translate="true">public class &#160; &#160; &#160; &#160; &#160; &#160; &#160;//CS1001 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;public int Num {get; set;} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;void MethodA(){} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">The following sample generates CS1001 because, when declaring an enum, you must specify members:</text><br/><br/><br/><text styleclass="Code with box" translate="true">// CS1001.cs &#160;</text><br/><text styleclass="Code with box" translate="true">public class clx &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; enum Colors : int &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;&apos;a&apos;, &apos;b&apos; // CS1001, &apos;a&apos; is not a valid int identifier &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; // The following line shows examples of valid identifiers: &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; // Blue, Red, Orange &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; }; &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true"> &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Parameter names are required even if the compiler doesn&apos;t use them, for example, in an interface definition. These parameters are required so that programmers who are consuming the interface know something about the what the parameters mean.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS1001-2.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library &#160;</text><br/><text styleclass="Code with box" translate="true">interface IMyTest &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; void TestFunc1(int, int); &#160;// CS1001 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // Use the following line instead: &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // void TestFunc1(int a, int b); &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">class CMyTest : IMyTest &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; void IMyTest.TestFunc1(int a, int b) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
