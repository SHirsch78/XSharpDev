<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0120</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0120</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">An object reference is required for the nonstatic field, method, or property &apos;member&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In order to use a non-static field, method, or property, you must first create an object instance. For more information about static methods, see Static Classes and Static Class Members. For more information about creating instances of classes, see Instance Constructors.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates CS0120:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS0120_1.cs &#160;</text><br/><text styleclass="Code with box" translate="true">public class MyClass &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // Non-static field &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public int i; &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; // Non-static method &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public void f(){} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // Non-static property &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; int Prop &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;get &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; return 1; &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;i = 10; &#160; // CS0120 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;f(); &#160; // CS0120 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;int p = Prop; &#160; // CS0120 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// try the following lines instead &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// MyClass mc = new MyClass(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// mc.i = 10; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// mc.f(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// int p = mc.Prop; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">CS0120 will also be generated if there is a call to a non-static method from a static method, as follows:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS0120_2.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// CS0120 expected &#160;</text><br/><text styleclass="Code with box" translate="true">using System; &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class MyClass &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;TestCall(); &#160; // CS0120 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// To call a non-static method from Main, &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// first create an instance of the class. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// Use the following two lines instead: &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// MyClass anInstanceofMyClass = new MyClass(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;// anInstanceofMyClass.TestCall(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public void TestCall() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Similarly, a static method cannot call an instance method unless you explicitly give it an instance of the class, as follows:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS0120_3.cs &#160;</text><br/><text styleclass="Code with box" translate="true">using System; &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class MyClass &#160;</text><br/><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;do_it(&quot;Hello There&quot;); &#160; // CS0120 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; private void do_it(string sText) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // You could also add the keyword static to the method definition: &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; // private static void do_it(string sText) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;Console.WriteLine(sText); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
