<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1701</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1701</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Assuming assembly reference &quot;Assembly Name #1&quot; matches &quot;Assembly Name #2&quot;, you may need to supply runtime policy</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The two assemblies differ in release and/or version number. For unification to occur, you must specify directives in the application&apos;s .config file, and you must provide the correct strong name of an assembly, as demonstrated in the following example code.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following multifile sample references an assembly using two different external aliases. This first sample builds the older version of the code that creates assembly CS1701_d.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS1701_a.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library /out:cs1701_d.dll /keyfile:mykey.snk &#160;</text><br/><text styleclass="Code with box" translate="true">using System.Reflection; &#160;</text><br/><text styleclass="Code with box" translate="true">[assembly:AssemblyVersion(&quot;1.0&quot;)] &#160;</text><br/><text styleclass="Code with box" translate="true">public class A { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public void M1() {} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class C1 {} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This is the code that creates the newer version of assembly CS1701_d. Note that it compiles into a different directory than the older version, necessary since the output files have the same names.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS1701_b.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library /out:c:\\cs1701_d.dll /keyfile:mykey.snk &#160;</text><br/><text styleclass="Code with box" translate="true">using System.Reflection; &#160;</text><br/><text styleclass="Code with box" translate="true">[assembly:AssemblyVersion(&quot;2.0&quot;)] &#160;</text><br/><text styleclass="Code with box" translate="true">public class A { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public void M2() {} &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public void M1() {} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class C2 {} &#160;</text><br/><text styleclass="Code with box" translate="true">public class C1 {} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This sample sets up the external aliases A1 and A2.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS1701_c.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /target:library /reference:A2=c:\\cs1701_d.dll /reference:A1=cs1701_d.dll &#160;</text><br/><br/><text styleclass="Code with box" translate="true">extern alias A1; &#160;</text><br/><text styleclass="Code with box" translate="true">extern alias A2; &#160;</text><br/><text styleclass="Code with box" translate="true">// using System; &#160;</text><br/><text styleclass="Code with box" translate="true">using a1 = A1::A; &#160;</text><br/><text styleclass="Code with box" translate="true">using a2 = A2::A; &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class Ref { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static a1 A1() { return new a1(); } &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static a2 A2() { return new a2(); } &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; public static A1::C1 M1() { return new A1::C1(); } &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static A2::C2 M2() { return new A2::C2(); } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This sample calls methods using two different aliases of A. The following sample generates C1701.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS1701_d.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /reference:c:\\CS1701_d.dll /reference:CS1701_c.dll &#160;</text><br/><text styleclass="Code with box" translate="true">// CS1701 expected &#160;</text><br/><text styleclass="Code with box" translate="true">class Tester { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;Ref.A1().M1(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;Ref.A2().M2(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
