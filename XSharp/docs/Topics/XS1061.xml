<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1061</title>
  <keywords>
    <keyword translate="true">XS1061</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1061</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">&apos;type&apos; does not contain a definition for &apos;member&apos; and no extension method &apos;name&apos; accepting a first argument of type &apos;type&apos; could be found (are you missing a using directive or an assembly reference?).</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This error occurs when you try to call a method or access a class member that does not exist.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following example generates XS1061 because TestClass1 does not have a DisplaySomething method. It does have a method that is called WriteSomething. Perhaps that is what the author of this source code meant to write.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">X#</text><br/><br/><text styleclass="Code with box" translate="true">// XS1061.prg  </text><br/><text styleclass="Code with box" translate="true">public class TestClass1  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">    // TestClass1 has one method, called WriteSomething.  </text><br/><text styleclass="Code with box" translate="true">    public void WriteSomething(string s)  </text><br/><text styleclass="Code with box" translate="true">    { </text><br/><text styleclass="Code with box" translate="true">        System.Console.WriteLine(s);  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">public class TestClass2  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">    // TestClass2 has one method, called DisplaySomething.  </text><br/><text styleclass="Code with box" translate="true">    public void DisplaySomething(string s)  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        System.Console.WriteLine(s);  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">public class TestTheClasses  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">    public static void Main()  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        TestClass1 tc1 = new TestClass1();  </text><br/><text styleclass="Code with box" translate="true">        TestClass2 tc2 = new TestClass2();  </text><br/><text styleclass="Code with box" translate="true">        // The following call fails because TestClass1 does not have   </text><br/><text styleclass="Code with box" translate="true">        // a method called DisplaySomething.  </text><br/><text styleclass="Code with box" translate="true">        tc1.DisplaySomething(&quot;Hello&quot;);      // XS1061  </text><br/><br/><text styleclass="Code with box" translate="true">        // To correct the error, change the method call to either   </text><br/><text styleclass="Code with box" translate="true">        // tc1.WriteSomething or tc2.DisplaySomething.  </text><br/><text styleclass="Code with box" translate="true">        tc1.WriteSomething(&quot;Hello from TestClass1&quot;);  </text><br/><text styleclass="Code with box" translate="true">        tc2.DisplaySomething(&quot;Hello from TestClass2&quot;);  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
