<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="robert" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">/reference</title>
  <keywords>
    <keyword translate="true">/reference</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">/reference</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The /reference option causes the compiler to import public type information in the specified file into the current project, thus enabling you to reference metadata from the specified assembly files.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Syntax</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">/reference:[alias=]filename &#160;</text><br/><text styleclass="Code with box" translate="true">/reference:filename &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Arguments</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="List"><text styleclass="Code Example" translate="true">filename</text><tab /><text styleclass="List" translate="true">The name of a file that contains an assembly manifest. To import more than one file, include a separate /reference option for each file.</text></para>
    <para styleclass="List"><text styleclass="Code Example" translate="true">alias</text><tab /><text styleclass="List" translate="true">A valid X# identifier that will represent a root namespace that will contain all namespaces in the assembly.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Remarks</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">To import from more than one file, include a /reference option for each file.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The files you import must contain a manifest; the output file must have been compiled with one of the /target options other than /target:module.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">/r is the short form of /reference.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Use /addmodule to import metadata from an output file that does not contain an assembly manifest.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If you reference an assembly (Assembly A) that references another assembly (Assembly B), you will need to reference Assembly B if:</text></para>
    <para styleclass="Normal"></para>
    <list id="4" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:Symbol; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">A type you use from Assembly A inherits from a type or implements an interface from Assembly B.</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">You invoke a field, property, event, or method that has a return type or parameter type from Assembly B.</text></li>
    </list>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Use /lib to specify the directory in which one or more of your assembly references is located. The /lib topic also discusses the directories in which the compiler searches for assemblies.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In order for the compiler to recognize a type in an assembly, and not in a module, it needs to be forced to resolve the type, which you can do by defining an instance of the type. There are other ways to resolve type names in an assembly for the compiler: for example, if you inherit from a type in an assembly, the type name will then be recognized by the compiler.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Sometimes it is necessary to reference two different versions of the same component from within one assembly. To do this, use the alias suboption on the /reference switch for each file to distinguish between the two files. This alias will be used as a qualifier for the component name, and will resolve to the component in one of the files.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The csc response (.rsp) file, which references commonly used .NET Framework assemblies, is used by default. Use /noconfig if you do not want the compiler to use xsc.rsp.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Note </text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In Visual Studio, use the Add Reference dialog box. </text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This example shows how to use the extern alias feature.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">You compile the source file and import metadata from </text><text styleclass="Code Example" translate="true">grid.dll</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Code Example" translate="true">grid20.dll</text><text styleclass="Normal" translate="true">,which have been compiled previously. The two DLLs contain separate versions of the same component, and you use two /reference with alias options to compile the source file. The options look like this:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">/reference:GridV1=grid.dll and /reference:GridV2=grid20.dll</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This sets up the external aliases &quot;GridV1&quot; and &quot;GridV2,&quot; which you use in your program by means of an extern statement:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">extern alias GridV1; &#160;</text><br/><text styleclass="Code with box" translate="true">extern alias GridV2; &#160;</text><br/><text styleclass="Code with box" translate="true">// Using statements go here. &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Once this is done, you can refer to the grid control from grid.dll by prefixing the control name with GridV1, like this:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">GridV1::Grid &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In addition, you can refer to the grid control from grid20.dll by prefixing the control name with GridV2 like this:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">GridV2::Grid &#160; </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
