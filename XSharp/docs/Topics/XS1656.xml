<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1656</title>
  <keywords>
    <keyword translate="true">XS1656</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1656</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Cannot assign to &apos;variable&apos; because it is a &apos;read-only variable type&apos;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This error occurs when an assignment to variable occurs in a read-only context. Read-only contexts include foreach iteration variables, using variables, and fixed variables. To resolve this error, avoid assignments to a statement variable in using blocks, foreach statements, and fixed statements.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following example generates error XS1656 because it tries to replace complete elements of a collection inside a foreach loop. One way to work around the error is to change the foreach loop to a for loop. Another way, not shown here, is to modify the members of the existing element; this is possible with classes, but not with structs.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">using System;  </text><br/><text styleclass="Code with box" translate="true">using System.Collections;  </text><br/><text styleclass="Code with box" translate="true">using System.Collections.Generic;  </text><br/><text styleclass="Code with box" translate="true">using System.Text;  </text><br/><br/><text styleclass="Code with box" translate="true">namespace XS1656_2  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><br/><text styleclass="Code with box" translate="true">    class Book  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        public string Title;  </text><br/><text styleclass="Code with box" translate="true">        public string Author;  </text><br/><text styleclass="Code with box" translate="true">        public double Price;  </text><br/><text styleclass="Code with box" translate="true">        public Book(string t, string a, double p)  </text><br/><text styleclass="Code with box" translate="true">        {  </text><br/><text styleclass="Code with box" translate="true">            Title=t;  </text><br/><text styleclass="Code with box" translate="true">            Author=a;  </text><br/><text styleclass="Code with box" translate="true">            Price=p;  </text><br/><br/><text styleclass="Code with box" translate="true">        }  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><br/><text styleclass="Code with box" translate="true">    class Program  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        private List&lt;Book&gt; list;  </text><br/><text styleclass="Code with box" translate="true">        static void Main(string[] args)  </text><br/><text styleclass="Code with box" translate="true">        {  </text><br/><text styleclass="Code with box" translate="true">            Program prog = new Program();  </text><br/><text styleclass="Code with box" translate="true">            prog.list = new List&lt;Book&gt;();  </text><br/><text styleclass="Code with box" translate="true">            prog.list.Add(new Book (&quot;The X# Programming Language&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                    &quot;Hejlsberg, Wiltamuth, Golde&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                     29.95));  </text><br/><text styleclass="Code with box" translate="true">            prog.list.Add(new Book (&quot;The C++ Programming Language&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                    &quot;Stroustrup&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                     29.95));  </text><br/><text styleclass="Code with box" translate="true">            prog.list.Add(new Book (&quot;The C Programming Language&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                    &quot;Kernighan, Ritchie&quot;,  </text><br/><text styleclass="Code with box" translate="true">                                    29.95));  </text><br/><text styleclass="Code with box" translate="true">            foreach(Book b in prog.list)  </text><br/><text styleclass="Code with box" translate="true">            {  </text><br/><text styleclass="Code with box" translate="true">                // Cannot modify an entire element in a foreach loop   </text><br/><text styleclass="Code with box" translate="true">                // even with reference types.  </text><br/><text styleclass="Code with box" translate="true">                // Use a for or while loop instead  </text><br/><text styleclass="Code with box" translate="true">                if (b.Title == &quot;The C Programming Language&quot;)  </text><br/><text styleclass="Code with box" translate="true">                    // Cannot assign to &apos;b&apos; because it is a &apos;foreach   </text><br/><text styleclass="Code with box" translate="true">                    // iteration variable&apos;  </text><br/><text styleclass="Code with box" translate="true">                    b = new Book(&quot;Programming Windows, 5th Ed.&quot;, &quot;Petzold&quot;, 29.95); //XS1656  </text><br/><text styleclass="Code with box" translate="true">            }  </text><br/><br/><text styleclass="Code with box" translate="true">            //With a for loop you can modify elements  </text><br/><text styleclass="Code with box" translate="true">            //for(int x = 0; x &lt; prog.list.Count; x++)  </text><br/><text styleclass="Code with box" translate="true">            //{  </text><br/><text styleclass="Code with box" translate="true">            //    if(prog.list[x].Title== &quot;The C Programming Language&quot;)  </text><br/><text styleclass="Code with box" translate="true">            //        prog.list[x] = new Book(&quot;Programming Windows, 5th Ed.&quot;, &quot;Petzold&quot;, 29.95);  </text><br/><text styleclass="Code with box" translate="true">            //}  </text><br/><text styleclass="Code with box" translate="true">            //foreach(Book b in prog.list)  </text><br/><text styleclass="Code with box" translate="true">            //    Console.WriteLine(b.Title);  </text><br/><br/><text styleclass="Code with box" translate="true">        }  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample demonstrates how XS1656 can be generated in other contexts besides a foreach loop:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// XS1656.prg  </text><br/><text styleclass="Code with box" translate="true">// compile with: /unsafe  </text><br/><text styleclass="Code with box" translate="true">using System;  </text><br/><br/><text styleclass="Code with box" translate="true">class C : IDisposable  </text><br/><text styleclass="Code with box" translate="true">{ </text><br/><text styleclass="Code with box" translate="true">    public void Dispose() { }  </text><br/><text styleclass="Code with box" translate="true">}  </text><br/><br/><text styleclass="Code with box" translate="true">class CMain  </text><br/><text styleclass="Code with box" translate="true">{  </text><br/><text styleclass="Code with box" translate="true">    unsafe public static void Main()  </text><br/><text styleclass="Code with box" translate="true">    {  </text><br/><text styleclass="Code with box" translate="true">        using (C c = new C())  </text><br/><text styleclass="Code with box" translate="true">        {  </text><br/><text styleclass="Code with box" translate="true">            // Cannot assign to &apos;c&apos; because it is a &apos;using variable&apos;  </text><br/><text styleclass="Code with box" translate="true">            c = new C(); // XS1656  </text><br/><text styleclass="Code with box" translate="true">        }  </text><br/><br/><text styleclass="Code with box" translate="true">        int[] ary = new int[] { 1, 2, 3, 4 };  </text><br/><text styleclass="Code with box" translate="true">        fixed (int* p = ary)  </text><br/><text styleclass="Code with box" translate="true">        {  </text><br/><text styleclass="Code with box" translate="true">            // Cannot assign to &apos;p&apos; because it is a &apos;fixed variable&apos;  </text><br/><text styleclass="Code with box" translate="true">            p = null; // XS1656  </text><br/><text styleclass="Code with box" translate="true">        }  </text><br/><text styleclass="Code with box" translate="true">    }  </text><br/><text styleclass="Code with box" translate="true">}  </text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
