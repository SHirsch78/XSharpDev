<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1729</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1729</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">&apos;type&apos; does not contain a constructor that takes &apos;number&apos; arguments.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This error occurs when you either directly or indirectly invoke the constructor of a class but the compiler cannot find any constructors with the same number of parameters. In the following example, the test class has no constructors that take any arguments. It therefore has only a default constructor that takes zero arguments. Because in the second line in which the error is generated, the derived class declares no constructors of its own, the compiler provides a default constructor. That constructor invokes a parameterless constructor in the base class. Because the base class has no such constructor, CS1729 is generated.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading3"><text styleclass="Heading3" translate="true">To correct this error</text></para>
    <para styleclass="Normal"></para>
    <list id="24" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:&apos;Segoe UI&apos;; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Adjust the number of parameters in the call to the constructor.</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Modify the class to provide a constructor with the parameters you must call.</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Provide a parameterless constructor in the base class.</text></li>
    </list>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following example generates CS1729:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">C#</text><br/><text styleclass="Code with box" translate="true">// cs1729.cs &#160;</text><br/><text styleclass="Code with box" translate="true">class Test &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;static int Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// Class Test has only a default constructor, which takes no arguments. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;Test test1 = new Test(2); // CS1729 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// The following line resolves the error. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;Test test2 = new Test(); &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// Class Parent has only one constructor, which takes two int parameters. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;Parent exampleParent1 = new Parent(10); // CS1729 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// The following line resolves the error. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;Parent exampleParent2 = new Parent(10, 1); &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;return 1; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class Parent &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// The only constructor for this class has two parameters. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;public Parent(int i, int j) { } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><br/><text styleclass="Code with box" translate="true">// The following declaration causes a compiler error because class Parent &#160;</text><br/><text styleclass="Code with box" translate="true">// does not have a constructor that takes no arguments. The declaration of </text><br/><text styleclass="Code with box" translate="true">// class Child2 shows how to resolve this error. &#160;</text><br/><text styleclass="Code with box" translate="true">public class Child : Parent { } // CS1729 &#160;</text><br/><br/><text styleclass="Code with box" translate="true">public class Child2 : Parent &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// The constructor for Child2 has only one parameter. To access the &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// constructor in Parent, and prevent this compiler error, you must provide &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;// a value for the second parameter of Parent. The following example provides 0. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;public Child2(int k) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;: base(k, 0) &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;// Add the body of the constructor here. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
