<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS1943</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS1943</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">An expression of type &apos;type&apos; is not allowed in a subsequent from clause in a query expression with source type &apos;type&apos;. Type inference failed in the call to &apos;method&apos;.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">All range variables must represent queryable types.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Heading3"><text styleclass="Heading3" translate="true">To correct this error</text></para>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <list id="30" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:&apos;Segoe UI&apos;; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Make sure that the type is a queryable type that implements IEnumerable, IEnumerable&lt;T&gt; or a derived interface, or any other type which has a query pattern defined for it.</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">If the type is a non-generic IEnumerable, provide an explicit type on the range variable.</text></li>
    </list>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following code generates CS1943:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// cs1943.cs &#160;</text><br/><text styleclass="Code with box" translate="true">using System.Linq; &#160;</text><br/><text styleclass="Code with box" translate="true">class Test &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;class TestClass &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ } &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;static void Main() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;int[] nums = { 0, 1, 2, 3, 4, 5 }; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;TestClass tc = new TestClass(); &#160;</text><br/><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160;var x = from n in nums &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;from s in tc // CS1943 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;select n + s; &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
