<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Liset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">XS0731</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">XS0731</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The type forwarder for type &apos;type&apos; in assembly &apos;assembly&apos; causes a cycle</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This error can only occur with improperly formed imported metadata. It cannot occur with only C# source.</text></para>
    <para styleclass="Heading2"><text styleclass="Heading2" translate="true">Example</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The following sample generates CS0731. The example consists of three files:</text></para>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <list id="70" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" format-charset="DEFAULT_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:13px; font-family:&apos;Segoe UI&apos;; font-size:11pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Circular.IL</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">Circular2.IL</text></li>
      <li styleclass="Normal" style="margin-left:13px;"><text styleclass="Normal" translate="true">CS0731.cs</text></li>
    </list>
    <para styleclass="Normal" style="margin-left:13px;"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">First compile the .IL files as libraries, and then compile the .cs code referencing the two files.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// Circular.il &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /DLL /out=Circular.dll &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly extern circular2 &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 0:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly extern circular3 &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 0:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly extern mscorlib &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.publickeytoken = (B7 7A 5C 56 19 34 E0 89 ) &#160; // .z\V.4.. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 2:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly Circular &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160;.hash algorithm 0x00008004 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 0:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.class extern forwarder Circular.Referenced.TypeForwarder &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.assembly extern circular2 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.module Circular.dll &#160;</text><br/><text styleclass="Code with box" translate="true">// MVID: {880C2329-C915-42A0-83E9-9D10C3E6DBD0} &#160;</text><br/><text styleclass="Code with box" translate="true">.imagebase 0x00400000 &#160;</text><br/><text styleclass="Code with box" translate="true">.file alignment 0x00000200 &#160;</text><br/><text styleclass="Code with box" translate="true">.stackreserve 0x00100000 &#160;</text><br/><text styleclass="Code with box" translate="true">.subsystem 0x0003 &#160; &#160; &#160; // WINDOWS_CUI &#160;</text><br/><text styleclass="Code with box" translate="true">.corflags 0x00000001 &#160; &#160;// &#160;ILONLY &#160;</text><br/><text styleclass="Code with box" translate="true">// Image base: 0x04E40000 &#160;</text><br/><text styleclass="Code with box" translate="true">// ======== CLASS MEMBERS DECLARATION ========= &#160;</text><br/><text styleclass="Code with box" translate="true">.class public abstract auto ansi sealed beforefieldinit User &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; extends [mscorlib]System.Object &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.method public hidebysig static class [circular2]Circular.Referenced.TypeForwarder &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160; &#160; &#160;F() cil managed &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;.maxstack &#160;1 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;newobj &#160; &#160; instance void [circular2]Circular.Referenced.TypeForwarder::.ctor() &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160;ret &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;} &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160; </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// Circular2.il &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /DLL /out=Circular2.dll &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly extern mscorlib &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.publickeytoken = (B7 7A 5C 56 19 34 E0 89 ) &#160; // .z\V.4.. &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 2:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly extern Circular &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 0:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.assembly circular2 &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) &#160; </text><br/><text styleclass="Code with box" translate="true"> &#160;.hash algorithm 0x00008004 &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.ver 0:0:0:0 &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.class extern forwarder Circular.Referenced.TypeForwarder &#160;</text><br/><text styleclass="Code with box" translate="true">{ &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160;.assembly extern Circular &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text><br/><text styleclass="Code with box" translate="true">.module circular2.dll &#160;</text><br/><text styleclass="Code with box" translate="true">// MVID: {8B3BE5C8-DBE1-49C4-BC72-DF35F0387C21} &#160;</text><br/><text styleclass="Code with box" translate="true">.imagebase 0x00400000 &#160;</text><br/><text styleclass="Code with box" translate="true">.file alignment 0x00000200 &#160;</text><br/><text styleclass="Code with box" translate="true">.stackreserve 0x00100000 &#160;</text><br/><text styleclass="Code with box" translate="true">.subsystem 0x0003 &#160; &#160; &#160; // &#160; WINDOWS_CUI &#160;</text><br/><text styleclass="Code with box" translate="true">.corflags 0x00000001 &#160; &#160;// &#160;ILONLY &#160;</text><br/><text styleclass="Code with box" translate="true">// Image base: 0x04E40000 &#160;</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Code with box"><text styleclass="Code with box" translate="true">// CS0731.cs &#160;</text><br/><text styleclass="Code with box" translate="true">// compile with: /reference:circular.dll /reference:circular2.dll &#160;</text><br/><text styleclass="Code with box" translate="true">// CS0731 expected &#160;</text><br/><text styleclass="Code with box" translate="true">class A { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; public static void Main() { &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; &#160; &#160;User.F(); &#160;</text><br/><text styleclass="Code with box" translate="true"> &#160; } &#160;</text><br/><text styleclass="Code with box" translate="true">} &#160;</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
